{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#documentacao-dos-microservicos","title":"Documenta\u00e7\u00e3o dos Microservi\u00e7os","text":""},{"location":"#equipe-de-desenvolvedores","title":"Equipe de desenvolvedores","text":"<ul> <li>Jo\u00e3o Gabriel Faus Faraco</li> </ul>"},{"location":"#repositorios","title":"Reposit\u00f3rios","text":"<p>Principal:  https://github.com/Joao-Gabriel05/pma.25.2</p> Microservice Interface Implementation Account account account-service Auth auth auth-service Gateway gateway-service Product product product-service Order order order-service Exchange exchange-service"},{"location":"exchange/","title":"Exchange","text":"<p>REST API that allows the user to convert between currencies implemented with FastAPI[^1]</p> <ul> <li>Github repository: Exchange Service</li> </ul> <p>GET /exchange-rate/{from}/{to}</p> <p>Get the current of a coin from one currency to another. E.g. <code>GET /coin/USD/EUR</code>.</p> ResponsePostman <p></p><pre><code>{\n    \"sell\": 0.8589,\n    \"buy\": 0.8591,\n    \"date\": \"2025-10-20 18:57:50\",\n    \"id_account\": \"9cb19820-cfae-4dba-afb7-ff88f47d4ddc\"\n}\n</code></pre> <pre><code>Response code: 200 (ok)\n</code></pre><p></p> <p></p> <p>This API uses the ExchangeRate-API to get the current exchange rates between currencies.</p> <p>Attention</p> <p>To consume the API, the user must be authenticated.</p> <p>Gateway</p> <p>This API is consumed through the Gateway of the platform.</p> <pre><code>flowchart LR\n    subgraph api [Trusted Layer]\n        direction TB\n        gateway --&gt; account\n        gateway --&gt; auth\n        account --&gt; db@{ shape: cyl, label: \"Database\" }\n        auth --&gt; account\n        gateway e1@==&gt; exchange:::red\n        gateway --&gt; product\n        gateway --&gt; order\n        product --&gt; db\n        order --&gt; db\n        order --&gt; product\n    end\n    exchange e3@==&gt; 3partyapi:::green@{label: \"3rd-party API\"}\n    internet e2@==&gt;|request| gateway\n    e1@{ animate: true }\n    e2@{ animate: true }\n    e3@{ animate: true }\n    classDef red fill:#fcc\n    classDef green fill:#cfc\n    click product \"#product-api\" \"Product API\"</code></pre> <p>This MkDocs was created by Jo\u00e3o Gabriel Faus Faraco</p>"},{"location":"jenkins/","title":"Jenkins","text":""},{"location":"jenkins/#jenkins-pipeline-structure","title":"Jenkins Pipeline Structure","text":"<p>Our Jenkins CI/CD pipeline is composed of four key stages:</p> <ol> <li>Checkout SCM - Automatically clones the repository from GitHub</li> <li>Dependencies - Installs all project dependencies using Maven</li> <li>Build - Compiles and packages the application with Maven</li> <li>Build &amp; Push Image - Creates multi-architecture Docker images and pushes them to DockerHub</li> </ol>"},{"location":"jenkins/#architecture-diagrams","title":"Architecture Diagrams","text":"Jenkins <p>Each microservice contains a <code>Jenkinsfile</code> defining the CI/CD process:</p> <pre><code>pipeline {\n    agent any\n    environment {\n        SERVICE = 'product-service'\n        NAME = \"Joao-Gabriel05/${env.SERVICE}\"\n    }\n    stages {\n        stage('Dependencies') {\n            steps {\n                build job: 'product', wait: true\n            }\n        }\n        stage('Build') { \n            steps {\n                sh 'mvn -B -DskipTests clean package'\n            }\n        }      \n        stage('Build &amp; Push Image') {\n            steps {\n                withCredentials([usernamePassword(credentialsId: 'dockerhub-credential', usernameVariable: 'USERNAME', passwordVariable: 'TOKEN')]) {\n                    sh \"docker login -u $USERNAME -p $TOKEN\"\n                    sh \"docker buildx create --use --platform=linux/arm64,linux/amd64 --node multi-platform-builder-${env.SERVICE} --name multi-platform-builder-${env.SERVICE}\"\n                    sh \"docker buildx build --platform=linux/arm64,linux/amd64 --push --tag ${env.NAME}:latest --tag ${env.NAME}:${env.BUILD_ID} -f Dockerfile .\"\n                    sh \"docker buildx rm --force multi-platform-builder-${env.SERVICE}\"\n                }\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"jenkins/#microservice-pipeline","title":"Microservice Pipeline","text":""},{"location":"jenkins/#contract-pipeline","title":"Contract Pipeline","text":"<p>Contracts use a simplified pipeline focused on building and installing the artifacts:</p> <pre><code>pipeline {\n    agent any\n\n    stages {\n        stage('Build') {\n            steps {\n                sh 'mvn -B -DskipTests clean install'\n            }\n        }\n    }\n}\n</code></pre> <p>This MkDocs was created by Joao Gabriel Faus Faraco</p>"},{"location":"minikube/","title":"Minikube","text":""},{"location":"minikube/#example-of-a-serviceyaml-file","title":"Example of a service.yaml file","text":"<pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: order\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: order\n  template:\n    metadata:\n      labels:\n        app: order\n    spec:\n      containers:\n        - name: order\n          image: joaofaraco05/order:latest\n          imagePullPolicy: Always\n          ports:\n            - containerPort: 8080\n          resources:\n            requests:\n              memory: \"200Mi\"\n              cpu: \"50m\"\n            limits:\n              memory: \"300Mi\"\n              cpu: \"200m\"\n\n---\n\napiVersion: v1\nkind: Service\nmetadata:\n  name: order\n  labels:\n    app: order\nspec:\n  type: LoadBalancer\n  ports:\n    - port: 80\n      protocol: TCP\n      targetPort: 8080\n\n  selector:\n    app: order\n</code></pre>"},{"location":"order/","title":"Order","text":"<pre><code>flowchart LR\n    subgraph api [Trusted Layer]\n        direction TB\n        gateway --&gt; account\n        gateway --&gt; auth\n        account --&gt; db@{ shape: cyl, label: \"Database\" }\n        auth --&gt; account\n        gateway e1@==&gt; exchange:::red\n        gateway --&gt; product\n        gateway --&gt; order\n        product --&gt; db\n        order --&gt; db\n        order --&gt; product\n    end\n    exchange e3@==&gt; 3partyapi:::green@{label: \"3rd-party API\"}\n    internet e2@==&gt;|request| gateway\n    e1@{ animate: true }\n    e2@{ animate: true }\n    e3@{ animate: true }\n    classDef red fill:#fcc\n    classDef green fill:#cfc\n    click product \"#product-api\" \"Product API\"</code></pre> <p>Attention</p> <p>To consume the API, the user must be authenticated.</p>"},{"location":"order/#order-service","title":"Order Service","text":"<p>Github repository: Order Service</p> <pre><code>order/\n\u251c\u2500\u2500 OrderApplication.java\n\u251c\u2500\u2500 OrderItemModel.java\n\u251c\u2500\u2500 OrderMapper.java\n\u251c\u2500\u2500 OrderModel.java\n\u251c\u2500\u2500 OrderRepository.java\n\u251c\u2500\u2500 OrderResource.java\n\u251c\u2500\u2500 OrderService.java\n</code></pre>"},{"location":"order/#order-contract","title":"Order (contract)","text":"<p>Github repository: Order</p> <pre><code>order/\n\u251c\u2500\u2500 ItemIn.java\n\u251c\u2500\u2500 ItemOut.java\n\u251c\u2500\u2500 OrderController.java\n\u251c\u2500\u2500 OrderIn.java\n\u251c\u2500\u2500 OrderOut.java\n\u251c\u2500\u2500 ProductSpanpshot.java\n</code></pre>"},{"location":"order/#order-api","title":"Order API","text":"<p>POST /order</p> <p>Create a new order for the current user.</p> RequestResponsePostman <pre><code>{\n    \"items\": [\n        {\n            \"idProduct\": \"6793ab1e-d84f-46b4-95ca-ba8235c04829\",\n            \"quantity\": 2\n        },\n        {\n            \"idProduct\": \"54e9f87d-33e9-4837-8991-b7d23feca00f\",\n            \"quantity\": 1\n        }\n    ]\n}\n</code></pre> <p></p><pre><code>{\n    \"id\": \"8377a423-452a-4859-ba01-36994be2e784\",\n    \"date\": \"2025-10-19T21:06:24.608643297Z\",\n    \"total\": 31.80,\n    \"items\": [\n        {\n            \"id\": \"511bb938-6466-44de-ad3a-7f6d293793b1\",\n            \"product\": {\n                \"id\": \"6793ab1e-d84f-46b4-95ca-ba8235c04829\",\n                \"name\": \"Tomato\",\n                \"unit\": \"kg\",\n                \"price\": 10.60\n            },\n            \"quantity\": 2,\n            \"total\": 21.20\n        },\n        {\n            \"id\": \"b04b9304-1b4f-4f1d-aefd-39633b507b48\",\n            \"product\": {\n                \"id\": \"54e9f87d-33e9-4837-8991-b7d23feca00f\",\n                \"name\": \"Uva\",\n                \"unit\": \"kg\",\n                \"price\": 10.60\n            },\n            \"quantity\": 1,\n            \"total\": 10.60\n        }\n    ]\n}\n</code></pre> <pre><code>Response code: 201 (created)\nResponse code: 400 (bad request), if the product does not exist.\n</code></pre><p></p> <p></p> <p>GET /order</p> <p>Get all orders for the current user.</p> ResponsePostman <p></p><pre><code>[\n    {\n        \"id\": \"8377a423-452a-4859-ba01-36994be2e784\",\n        \"date\": \"2025-10-19T21:06:24.608643Z\",\n        \"total\": 31.80,\n        \"items\": [\n            {\n                \"id\": \"511bb938-6466-44de-ad3a-7f6d293793b1\",\n                \"product\": {\n                    \"id\": \"6793ab1e-d84f-46b4-95ca-ba8235c04829\",\n                    \"name\": \"Tomato\",\n                    \"unit\": \"kg\",\n                    \"price\": 10.60\n                },\n                \"quantity\": 2,\n                \"total\": 21.20\n            },\n            {\n                \"id\": \"b04b9304-1b4f-4f1d-aefd-39633b507b48\",\n                \"product\": {\n                    \"id\": \"54e9f87d-33e9-4837-8991-b7d23feca00f\",\n                    \"name\": \"Uva\",\n                    \"unit\": \"kg\",\n                    \"price\": 10.60\n                },\n                \"quantity\": 1,\n                \"total\": 10.60\n            }\n        ]\n    },\n    {\n        \"id\": \"344c9a49-76ab-4b50-9710-8fc5be868b0f\",\n        \"date\": \"2025-10-19T21:01:11.909389Z\",\n        \"total\": 31.80,\n        \"items\": [\n            {\n                \"id\": \"885631ec-b20c-4549-ae39-db8e0126bfec\",\n                \"product\": {\n                    \"id\": \"6793ab1e-d84f-46b4-95ca-ba8235c04829\",\n                    \"name\": \"Tomato\",\n                    \"unit\": \"kg\",\n                    \"price\": 10.60\n                },\n                \"quantity\": 2,\n                \"total\": 21.20\n            },\n            {\n                \"id\": \"94adaa6e-7e32-499c-85da-0c26bbe6c6a6\",\n                \"product\": {\n                    \"id\": \"54e9f87d-33e9-4837-8991-b7d23feca00f\",\n                    \"name\": \"Uva\",\n                    \"unit\": \"kg\",\n                    \"price\": 10.60\n                },\n                \"quantity\": 1,\n                \"total\": 10.60\n            }\n        ]\n    },\n    {\n        \"id\": \"c1ad8eeb-d0c7-427d-bccd-38b93a6a63c9\",\n        \"date\": \"2025-10-19T20:16:19.127964Z\",\n        \"total\": 31.80,\n        \"items\": [\n            {\n                \"id\": \"30d9d929-e776-4400-a45d-50c0bd0ae143\",\n                \"product\": {\n                    \"id\": \"6793ab1e-d84f-46b4-95ca-ba8235c04829\",\n                    \"name\": \"Tomato\",\n                    \"unit\": \"kg\",\n                    \"price\": 10.60\n                },\n                \"quantity\": 2,\n                \"total\": 21.20\n            },\n            {\n                \"id\": \"494b2697-b4c0-4a26-8843-3657a52b9c07\",\n                \"product\": {\n                    \"id\": \"54e9f87d-33e9-4837-8991-b7d23feca00f\",\n                    \"name\": \"Uva\",\n                    \"unit\": \"kg\",\n                    \"price\": 10.60\n                },\n                \"quantity\": 1,\n                \"total\": 10.60\n            }\n        ]\n    }\n]\n</code></pre> <pre><code>Response code: 200 (ok)\n</code></pre><p></p> <p></p> <p>GET /order/{id}</p> <p>Get the order details by its ID. The order must belong to the current user., otherwise, return a <code>404</code>.</p> ResponsePostman <p></p><pre><code>{\n    \"id\": \"c1ad8eeb-d0c7-427d-bccd-38b93a6a63c9\",\n    \"date\": \"2025-10-19T20:16:19.127964Z\",\n    \"total\": 31.80,\n    \"items\": [\n        {\n            \"id\": \"30d9d929-e776-4400-a45d-50c0bd0ae143\",\n            \"product\": {\n                \"id\": \"6793ab1e-d84f-46b4-95ca-ba8235c04829\",\n                \"name\": \"Tomato\",\n                \"unit\": \"kg\",\n                \"price\": 10.60\n            },\n            \"quantity\": 2,\n            \"total\": 21.20\n        },\n        {\n            \"id\": \"494b2697-b4c0-4a26-8843-3657a52b9c07\",\n            \"product\": {\n                \"id\": \"54e9f87d-33e9-4837-8991-b7d23feca00f\",\n                \"name\": \"Uva\",\n                \"unit\": \"kg\",\n                \"price\": 10.60\n            },\n            \"quantity\": 1,\n            \"total\": 10.60\n        }\n    ]\n}\n</code></pre> <pre><code>Response code: 200 (ok)\nResponse code: 404 (not found), if the order does not belong to the current user.\n</code></pre><p></p> <p></p> <p>This MkDocs was created by Jo\u00e3o Gabriel Faus Faraco</p>"},{"location":"product/","title":"Product","text":"<p>RESTful API for a store's <code>Product</code>.</p> <pre><code>flowchart LR\n    subgraph api [Trusted Layer]\n        direction TB\n        gateway --&gt; account\n        gateway --&gt; auth\n        account --&gt; db@{ shape: cyl, label: \"Database\" }\n        auth --&gt; account\n        gateway e1@==&gt; exchange:::red\n        gateway --&gt; product\n        gateway --&gt; order\n        product --&gt; db\n        order --&gt; db\n        order --&gt; product\n    end\n    exchange e3@==&gt; 3partyapi:::green@{label: \"3rd-party API\"}\n    internet e2@==&gt;|request| gateway\n    e1@{ animate: true }\n    e2@{ animate: true }\n    e3@{ animate: true }\n    classDef red fill:#fcc\n    classDef green fill:#cfc\n    click product \"#product-api\" \"Product API\"</code></pre> <p>Attention</p> <p>To consume the API, the user must be authenticated.</p>"},{"location":"product/#product-service","title":"Product Service","text":"<p>Github repository: Product Service</p> <pre><code>product/\n\u251c\u2500\u2500 Product.java\n\u251c\u2500\u2500 ProductApplication.java\n\u251c\u2500\u2500 ProductModel.java\n\u251c\u2500\u2500 ProductParser.java\n\u251c\u2500\u2500 ProductRepository.java\n\u251c\u2500\u2500 ProductResource.java\n\u251c\u2500\u2500 ProductService.java\n</code></pre>"},{"location":"product/#product-contract","title":"Product (contract)","text":"<p>Github repository: Product</p> <pre><code>product/\n\u251c\u2500\u2500 ProductController.java\n\u251c\u2500\u2500 ProductIn.java\n\u251c\u2500\u2500 ProductOut.java\n</code></pre>"},{"location":"product/#product-api","title":"Product API","text":"<p>The API has the following endpoints:</p> <p>POST /product</p> <p>Create a new product.</p> RequestResponsePostman <pre><code>{\n    \"name\": \"Caju\",\n    \"price\": 10.60,\n    \"unity\": \"kg\"\n}\n</code></pre> <p></p><pre><code>{\n    \"idProduct\": \"cd0a9077-6a9c-46a2-a5cd-8cef19a205e4\",\n    \"name\": \"Caju\",\n    \"price\": 10.60,\n    \"unity\": \"kg\"\n}\n</code></pre> <pre><code>Response code: 201 (created)\n</code></pre><p></p> <p></p> <p>GET /product</p> <p>Get all products.</p> ResponsePostman <p></p><pre><code>[\n    {\n        \"id\": \"6793ab1e-d84f-46b4-95ca-ba8235c04829\",\n        \"name\": \"Tomato\",\n        \"price\": 10.60,\n        \"unit\": \"kg\"\n    },\n    {\n        \"id\": \"54e9f87d-33e9-4837-8991-b7d23feca00f\",\n        \"name\": \"Uva\",\n        \"price\": 10.60,\n        \"unit\": \"kg\"\n    },\n    {\n        \"id\": \"97172619-f825-4755-93dd-d60852820bfd\",\n        \"name\": \"Suco\",\n        \"price\": 10.60,\n        \"unit\": \"kg\"\n    },\n    {\n        \"id\": \"cd0a9077-6a9c-46a2-a5cd-8cef19a205e4\",\n        \"name\": \"Caju\",\n        \"price\": 10.60,\n        \"unit\": \"kg\"\n    }\n]\n</code></pre> <pre><code>Response code: 200 (ok)\n</code></pre><p></p> <p></p> <p>GET /product/{id}</p> <p>Get a product by its ID.</p> ResponsePostman <p></p><pre><code>{\n    \"id\": \"54e9f87d-33e9-4837-8991-b7d23feca00f\",\n    \"name\": \"Uva\",\n    \"price\": 10.60,\n    \"unit\": \"kg\"\n}\n</code></pre> <pre><code>Response code: 200 (ok)\n</code></pre><p></p> <p></p> <p>DELETE /product/{id}</p> <p>Delete a product by its ID.</p> ResponsePostman <pre><code>Response code: 204 (no content)\n</code></pre> <p></p> <p>This MkDocs was created by Jo\u00e3o Gabriel Faus Faraco</p>"},{"location":"projeto/","title":"Index","text":"<p>Aqui vai toda a documenta\u00e7\u00e3o do projeto, incluindo o que j\u00e1 foi feito e o que falta fazer.</p>"},{"location":"thisdocumentation/","title":"Index","text":""},{"location":"thisdocumentation/#pre-requisitos","title":"Pr\u00e9-requisitos","text":"<p>Antes de come\u00e7ar, certifique-se de que voc\u00ea possui os seguintes pr\u00e9-requisitos instalados em seu sistema:</p> <ul> <li>Git: Para clonar o reposit\u00f3rio.</li> </ul>"},{"location":"thisdocumentation/#instalando-o-python","title":"Instalando o Python","text":"LinuxmacOSWindows <p>Instale o Python 3.8 ou superior.</p> <pre><code>sudo apt install python3 python3-venv python3-pip\npython3 --version\n</code></pre> <p>Instale o Python 3.8 ou superior.</p> <pre><code>brew install python\npython3 --version\n</code></pre> <p>Instale o Python 3.13 ou superior. Baixe o instalador do site oficial do Python (https://www.python.org/downloads/) e execute-o. Certifique-se de marcar a op\u00e7\u00e3o \"Add Python to PATH\" durante a instala\u00e7\u00e3o.</p> <pre><code>python --version\n</code></pre>"},{"location":"thisdocumentation/#usage","title":"Usage","text":"<p>Para utilizar o c\u00f3digo deste reposit\u00f3rio, siga as instru\u00e7\u00f5es a seguir:</p> <p>Clone ou fork este reposit\u00f3rio:</p> <pre><code>git clone &lt;URL_DO_REPOSITORIO&gt;\n</code></pre> <p>Crie um ambiente virtual do Python:</p> Linux/macOSWindows <pre><code>python3 -m venv env\n</code></pre> <pre><code>python -m venv env\n</code></pre> <p>Ative o ambiente virtual (voc\u00ea deve fazer isso sempre que for executar algum script deste reposit\u00f3rio):</p> Linux/macOSWindows <pre><code>source ./env/bin/activate\n</code></pre> <pre><code>.\\env\\Scripts\\activate\n</code></pre> <p>Instale as depend\u00eancias com:</p> Linux/macOSWindows <pre><code>python3 -m pip install -r requirements.txt --upgrade\n</code></pre> <pre><code>python -m pip install -r requirements.txt --upgrade\n</code></pre>"},{"location":"thisdocumentation/#deployment","title":"Deployment","text":"<p>O material utiliza o mkdocs para gerar a documenta\u00e7\u00e3o. Para visualizar a documenta\u00e7\u00e3o, execute o comando:</p> <pre><code>mkdocs serve -o\n</code></pre> <p>Para subir ao GitHub Pages, execute o comando:</p> <pre><code>mkdocs gh-deploy\n</code></pre> <p>Esse reposit\u00f3rio possui um workflow do GitHub Actions que executa o comando <code>mkdocs gh-deploy</code> sempre que houver um push na branch <code>main</code>. Assim, n\u00e3o \u00e9 necess\u00e1rio executar esse comando manualmente. Toda vez que voc\u00ea fizer um push na branch <code>main</code>, a documenta\u00e7\u00e3o ser\u00e1 atualizada automaticamente no GitHub Pages.</p> <p>Aviso 1</p> <p>Para que o github actions funcione corretamente, \u00e9 necess\u00e1rio que o reposit\u00f3rio esteja configurado para que o bot <code>github-actions[bot]</code> tenha permiss\u00e3o de escrita. Voc\u00ea pode verificar isso nas configura\u00e7\u00f5es do reposit\u00f3rio, na se\u00e7\u00e3o \"Actions\" e depois em \"General\". Certifique-se de que a op\u00e7\u00e3o \"Workflow permissions\" esteja definida como \"Read and write permissions\".</p> <p></p> <p>Aviso 2</p> <p>Depois de publicar, caso n\u00e3o consiga acessar a p\u00e1gina, verifique se o github pages est\u00e1 configurado corretamente. V\u00e1 at\u00e9 as configura\u00e7\u00f5es do reposit\u00f3rio, na se\u00e7\u00e3o \"Pages\" e verifique se a branch <code>gh-pages</code> est\u00e1 selecionada como fonte. Se n\u00e3o estiver, selecione-a e salve as altera\u00e7\u00f5es.</p> <p></p> <p>Pay Attention</p> <p>No arquivo '<code>mkdocs.yml</code>, a se\u00e7\u00e3o <code>site_url</code> deve estar configurada corretamente para o seu reposit\u00f3rio. Por exemplo, se o seu reposit\u00f3rio estiver em <code>https://github.com/usuario/repositorio</code>, a se\u00e7\u00e3o <code>site_url</code> deve ser:</p> <pre><code>site_url: https://usuario.github.io/repositorio\n</code></pre> <p>Tamb\u00e9m, certifique-se de que a se\u00e7\u00e3o <code>repo_url</code> esteja configurada corretamente para o seu reposit\u00f3rio. Por exemplo:</p> <pre><code>repo_url: https://github.com/usuario/repositorio\n</code></pre>"}]}